package com.primus.crm.appointment.model;

import com.primus.abstracts.PrimusBusinessModel;
import com.primus.admin.region.model.Location;
import com.primus.common.FiniteValue;
import com.primus.common.user.model.User;
import com.primus.externals.doctor.model.Doctor;
import com.primus.externals.stockist.model.Stockist;
import com.primus.externals.store.model.Store;
import com.techtrade.rads.framework.annotations.RadsPropertySet;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import javax.persistence.*;
import java.util.Date;

@Entity
@Table(name = "APPOINTMENT_TEMPLATES")
@AttributeOverrides({
        @AttributeOverride(name="ID", column=@Column(name="ID")),
        @AttributeOverride(name="createdDate", column=@Column(name="CREATED_DATE")),
        @AttributeOverride(name="createdBy", column=@Column(name="CREATED_BY")),
        @AttributeOverride(name="lastUpdateDate", column=@Column(name="LAST_UPDATED_DATE")),
        @AttributeOverride(name="lastUpdatedBy", column=@Column(name="LAST_UPDATED_BY")),
        @AttributeOverride(name="version", column=@Column(name="VERSION"))

})

/**
** Class Generated by Primus Auto code generator
**/
public class AppointmentTemplate extends PrimusBusinessModel {

	String templateNo ;

	@RadsPropertySet(isBK =  true )
	@Column(name  ="TEMPLATE_NO")
	public String  getTemplateNo ()
	{
		return templateNo;
	}

	@RadsPropertySet(isBK =  true )
	public void setTemplateNo ( String   val )
	{
		templateNo  = val;
	}

	User manager ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="MANAGER_USER_ID")
	public User  getManager ()
	{
		return manager;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setManager ( User   val )
	{
		manager  = val;
	}

	User agent ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="AGENT_USER_ID")
	public User  getAgent ()
	{
		return agent;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setAgent ( User   val )
	{
		agent  = val;
	}

	FiniteValue partyType ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="APPT_PARTY_TYPE")
	public FiniteValue  getPartyType ()
	{
		return partyType;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setPartyType ( FiniteValue   val )
	{
		partyType  = val;
	}

	Location location ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="LOCATION_ID")
	public Location  getLocation ()
	{
		return location;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setLocation ( Location val )
	{
		location  = val;
	}

	Stockist stockist ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="STOCKIST_ID")
	public Stockist getStockist ()
	{
		return stockist;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setStockist ( Stockist   val )
	{
		stockist  = val;
	}

	Store store ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="STORE_ID")
	public Store  getStore ()
	{
		return store;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setStore ( Store   val )
	{
		store  = val;
	}

	Doctor doctor ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="DOCTOR_ID")
	public Doctor  getDoctor ()
	{
		return doctor;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setDoctor ( Doctor   val )
	{
		doctor  = val;
	}

	Date startFrom ;

	
	@Column(name  ="START_FROM")
	public Date  getStartFrom ()
	{
		return startFrom;
	}

	
	public void setStartFrom ( Date   val )
	{
		startFrom  = val;
	}

	Date endAt ;

	
	@Column(name  ="END_DT")
	public Date getEndAt ()
	{
		return endAt;
	}

	
	public void setEndAt ( Date   val )
	{
		endAt  = val;
	}


	int hh;
	int mm;

	@Transient
	public int getHh() {
		return hh;
	}

	public void setHh(int hh) {
		this.hh = hh;
	}

	@Transient
	public int getMm() {
		return mm;
	}

	public void setMm(int mm) {
		this.mm = mm;
	}

	Date appointmentTime ;

	
	@Column(name  ="APPT_TIME")
	public Date  getAppointmentTime ()
	{
		return appointmentTime;
	}

	
	public void setAppointmentTime ( Date   val )
	{
		appointmentTime  = val;
	}

	Double duration ;

	
	@Column(name  ="DURATION")
	public Double  getDuration ()
	{
		return duration;
	}

	@Transient
	public String getPartyName()
	{
		AppointmentTemplate appointmentTemplate = this;
			if ("PTSTCK".equalsIgnoreCase(appointmentTemplate.getPartyType().getCode())) {
			return appointmentTemplate.getStockist().getName();

		}
		if ("PTSTRE".equalsIgnoreCase(appointmentTemplate.getPartyType().getCode())) {
			return appointmentTemplate.getStore().getName();

		}
		if ("PTDCT".equalsIgnoreCase(appointmentTemplate.getPartyType().getCode())) {
			return appointmentTemplate.getDoctor().getName();

		}
		return "";
	}


	public void setDuration ( Double   val )
	{
		duration  = val;
	}

	FiniteValue pattern ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="PATTERN")
	public FiniteValue  getPattern ()
	{
		return pattern;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setPattern ( FiniteValue   val )
	{
		pattern  = val;
	}

	Integer weekDays ;

	
	@Column(name  ="WEEKDAYS")
	public Integer  getWeekDays ()
	{
		return weekDays;
	}

	
	public void setWeekDays ( Integer   val )
	{
		weekDays  = val;
	}

	String description ;

	
	@Column(name  ="DESCRIPTION")
	public String  getDescription ()
	{
		return description;
	}

	
	public void setDescription ( String   val )
	{
		description  = val;
	}


	boolean sundayFlag;
	boolean mondayFlag;
	boolean tuesdayFlag;
	boolean wednesdayFlag;
	boolean thursFlag;
	boolean friFlag;
	boolean saturdayFlag;

	@Transient
	public boolean isSundayFlag() {
		return sundayFlag;
	}

	public void setSundayFlag(boolean sundayFlag) {
		this.sundayFlag = sundayFlag;
	}

	@Transient
	public boolean isMondayFlag() {
		return mondayFlag;
	}

	public void setMondayFlag(boolean mondayFlag) {
		this.mondayFlag = mondayFlag;
	}

	@Transient
	public boolean isTuesdayFlag() {
		return tuesdayFlag;
	}

	public void setTuesdayFlag(boolean tuesdayFlag) {
		this.tuesdayFlag = tuesdayFlag;
	}

	@Transient
	public boolean isWednesdayFlag() {
		return wednesdayFlag;
	}

	public void setWednesdayFlag(boolean wednesdayFlag) {
		this.wednesdayFlag = wednesdayFlag;
	}

	@Transient
	public boolean isThursFlag() {
		return thursFlag;
	}

	public void setThursFlag(boolean thursFlag) {
		this.thursFlag = thursFlag;
	}

	@Transient
	public boolean isFriFlag() {
		return friFlag;
	}

	public void setFriFlag(boolean friFlag) {
		this.friFlag = friFlag;
	}

	@Transient
	public boolean isSaturdayFlag() {
		return saturdayFlag;
	}

	public void setSaturdayFlag(boolean saturdayFlag) {
		this.saturdayFlag = saturdayFlag;
	}
}