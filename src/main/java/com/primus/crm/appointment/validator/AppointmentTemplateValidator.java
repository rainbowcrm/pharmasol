package com.primus.crm.appointment.validator;

import com.primus.abstracts.AbstractValidator;
import com.primus.abstracts.CommonErrorCodes;
import com.primus.abstracts.PrimusBusinessModel;
import com.primus.abstracts.PrimusModel;
import com.primus.common.ProductContext;
import com.techtrade.rads.framework.model.abstracts.RadsError;
import com.techtrade.rads.framework.utils.Utils;
import org.springframework.stereotype.Component;
import java.util.ArrayList;
import java.util.List;
import com.primus.crm.appointment.model.AppointmentTemplate;


/**
** Class Generated by Primus Auto code generator
**/
@Component
public class AppointmentTemplateValidator extends AbstractValidator {

@Override
    public String getBusinessKeyField() {
        return "Template_No";
    }

    @Override
    public List<RadsError> checkforMandatoryFields(PrimusModel model, ProductContext context) {
        AppointmentTemplate appointmentTemplate = (AppointmentTemplate) model;
        List<RadsError> results =new ArrayList<RadsError>();
                if(Utils.isNull(appointmentTemplate.getTemplateNo  () ) ) {
            results.add( getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY,"Template_No"));
        }

                if(Utils.isNull(appointmentTemplate.getManager  () ) ) {
            results.add( getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY,"Manager"));
        }

                if(Utils.isNull(appointmentTemplate.getAgent  () ) ) {
            results.add( getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY,"Agent"));
        }

                if(Utils.isNull(appointmentTemplate.getPartyType  () ) ) {
            results.add( getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY,"Party"));
        }

                if(Utils.isNull(appointmentTemplate.getLocation  () ) ) {
            results.add( getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY,"Location"));
        }

                if(Utils.isNull(appointmentTemplate.getStartFrom  () ) ) {
            results.add( getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY,"Start_From"));
        }

                if(Utils.isNull(appointmentTemplate.getEndAt  () ) ) {
            results.add( getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY,"End_At"));
        }

                if(Utils.isNull(appointmentTemplate.getAppointmentTime  () ) ) {
            results.add( getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY,"Appointment_Time"));
        }

                if(Utils.isNull(appointmentTemplate.getPattern  () ) ) {
            results.add( getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY,"Pattern"));
        }

                if(Utils.isNull(appointmentTemplate.getWeekDays  () ) ) {
            results.add( getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY,"Pattern"));
        }

        
        return results;

     }

     @Override
    public List<RadsError> checkforValueRanges(PrimusModel model, ProductContext context) {
        return null;
    }

    @Override
    public List<RadsError> adaptFromUI(PrimusModel model, ProductContext context) {
       super.adaptFromUI(model,context) ;
       return null;
    }
}