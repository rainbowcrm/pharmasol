package com.primus.crm.target.controller;

import com.primus.abstracts.AbstractTransactionController;
import com.primus.common.ServiceFactory;
import com.primus.crm.appointmentplan.AppointmentPlanner;
import com.primus.crm.appointmentplan.model.AppointmentPlan;
import com.primus.crm.target.model.Target;
import com.primus.crm.target.service.TargetService;
import com.techtrade.rads.framework.model.abstracts.ModelObject;
import com.techtrade.rads.framework.ui.abstracts.PageResult;;
import java.util.LinkedHashMap;
import java.util.Map;


/**
** Class Generated by Primus Auto code generator
**/
public class TargetController extends AbstractTransactionController{

    @Override
    protected String getServiceName() {
        return "TargetService";
    }


    @Override
    protected String getValidatorName() {
        return "TargetValidator";
    }

    public boolean IsReadyToPlan()
    {
        if (getObject()==  null) return false;
        Target target = (Target) getObject() ;
        if (target != null && ( target.getInstanceCreated() == null  || target.getInstanceCreated().booleanValue() == false)  ) return true;
        return false;

    }

    @Override
    public PageResult submit(ModelObject object, String actionParam) {
        if ("schedule".equalsIgnoreCase(actionParam)) {
            TargetService targetService  = ServiceFactory.getTargetService()   ;
            Target target =  (Target)targetService.getById(((Target)object).getId());
            AppointmentPlanner planner = new AppointmentPlanner() ;
            AppointmentPlan plan  = planner.generatePlan(target,getProductContext());
            plan.setTarget(target);
            PageResult result = new PageResult();
            result.setObject(plan);
            result.setNextPageKey("appointmentPlan");
            return  result;
        }
        return new PageResult();
    }

}