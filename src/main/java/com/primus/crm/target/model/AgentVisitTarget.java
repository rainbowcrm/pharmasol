package com.primus.crm.target.model;

import com.primus.abstracts.PrimusBusinessModel;
import com.primus.common.FiniteValue;
import com.primus.common.user.model.User;
import com.primus.externals.doctor.model.Doctor;
import com.primus.externals.stockist.model.Stockist;
import com.primus.externals.store.model.Store;
import com.techtrade.rads.framework.annotations.RadsPropertySet;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import javax.persistence.*;

@Entity
@Table(name = "AGENT_VISIT_TARGETS")
@AttributeOverrides({
        @AttributeOverride(name="ID", column=@Column(name="ID")),
        @AttributeOverride(name="createdDate", column=@Column(name="CREATED_DATE")),
        @AttributeOverride(name="createdBy", column=@Column(name="CREATED_BY")),
        @AttributeOverride(name="lastUpdateDate", column=@Column(name="LAST_UPDATED_DATE")),
        @AttributeOverride(name="lastUpdatedBy", column=@Column(name="LAST_UPDATED_BY")),
        @AttributeOverride(name="version", column=@Column(name="VERSION"))

})

/**
** Class Generated by Primus Auto code generator
**/
public class AgentVisitTarget extends PrimusBusinessModel {

	User agent ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="AGENT_USER_ID")
	public User  getAgent ()
	{
		return agent;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setAgent ( User   val )
	{
		agent  = val;
	}

	Target target ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="TARGET_ID")
	public Target  getTarget ()
	{
		return target;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setTarget ( Target   val )
	{
		target  = val;
	}

	int lineNumber ;

	@RadsPropertySet(isBK =  true )
	@Column(name  ="LINE_NUMBER")
	public int  getLineNumber ()
	{
		return lineNumber;
	}

	@RadsPropertySet(isBK =  true )
	public void setLineNumber ( int   val )
	{
		lineNumber  = val;
	}

	FiniteValue visitingType ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="VISITING_TARGET_TYPE")
	public FiniteValue  getVisitingType ()
	{
		return visitingType;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setVisitingType ( FiniteValue   val )
	{
		visitingType  = val;
	}

	String visitingEntity ;

	
	@Column(name  ="VISIT_ENTITY")
	public String  getVisitingEntity ()
	{
		return visitingEntity;
	}

	
	public void setVisitingEntity ( String   val )
	{
		visitingEntity  = val;
	}

	Stockist stockist ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="STOCKIST_ID")
	public Stockist  getStockist ()
	{
		return stockist;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setStockist ( Stockist val )
	{
		stockist  = val;
	}

	Store store ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="STORE_ID")
	public Store getStore ()
	{
		return store;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setStore ( Store   val )
	{
		store  = val;
	}

	Doctor doctor ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="DOCTOR_ID")
	public Doctor  getDoctor ()
	{
		return doctor;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setDoctor ( Doctor   val )
	{
		doctor  = val;
	}

	int targettedVisit ;

	
	@Column(name  ="TARGETTED_VISIT")
	public int  getTargettedVisit ()
	{
		return targettedVisit;
	}

	
	public void setTargettedVisit ( int   val )
	{
		targettedVisit  = val;
	}

	String description ;

	
	@Column(name  ="DESCRIPTION")
	public String  getDescription ()
	{
		return description;
	}

	
	public void setDescription ( String   val )
	{
		description  = val;
	}




}