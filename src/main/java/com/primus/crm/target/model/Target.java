package com.primus.crm.target.model;

import com.primus.abstracts.PrimusBusinessModel;
import com.primus.admin.region.model.Location;
import com.primus.common.FiniteValue;
import com.primus.common.user.model.User;
import com.techtrade.rads.framework.annotations.RadsPropertySet;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import javax.persistence.*;
import java.util.Collection ;
import java.util.Collection ;
import java.util.Date;

@Entity
@Table(name = "TARGETS")
@AttributeOverrides({
        @AttributeOverride(name="ID", column=@Column(name="ID")),
        @AttributeOverride(name="createdDate", column=@Column(name="CREATED_DATE")),
        @AttributeOverride(name="createdBy", column=@Column(name="CREATED_BY")),
        @AttributeOverride(name="lastUpdateDate", column=@Column(name="LAST_UPDATED_DATE")),
        @AttributeOverride(name="lastUpdatedBy", column=@Column(name="LAST_UPDATED_BY")),
        @AttributeOverride(name="version", column=@Column(name="VERSION"))

})

/**
** Class Generated by Primus Auto code generator
**/
public class Target extends PrimusBusinessModel {

	String period ;

	@RadsPropertySet(isBK =  true )
	@Column(name  ="Period")
	public String  getPeriod ()
	{
		return period;
	}

	@RadsPropertySet(isBK =  true )
	public void setPeriod ( String   val )
	{
		period  = val;
	}

	Location location ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="LOCATION_ID")
	public Location  getLocation ()
	{
		return location;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setLocation ( Location val )
	{
		location  = val;
	}

	Date fromDate ;

	
	@Column(name  ="FROM_DATE")
	public Date  getFromDate ()
	{
		return fromDate;
	}

	
	public void setFromDate ( Date   val )
	{
		fromDate  = val;
	}

	Date toDate ;

	
	@Column(name  ="TO_DATE")
	public Date  getToDate ()
	{
		return toDate;
	}

	
	public void setToDate ( Date   val )
	{
		toDate  = val;
	}

	User manager ;

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	@ManyToOne(cascade=CascadeType.DETACH)
	@JoinColumn(name  ="MANAGER_USER_ID")
	public User getManager ()
	{
		return manager;
	}

	@RadsPropertySet(useBKForJSON =  true, useBKForMap = true, useBKForXML = true)
	public void setManager ( User   val )
	{
		manager  = val;
	}

	String description ;

	
	@Column(name  ="DESCRIPTION")
	public String  getDescription ()
	{
		return description;
	}

	
	public void setDescription ( String   val )
	{
		description  = val;
	}

	Collection<AgentVisitTarget> agentVisitTargets ;

	
	@OneToMany(cascade= CascadeType.ALL, mappedBy = "target")
	public Collection<AgentVisitTarget>  getAgentVisitTargets ()
	{
		return agentVisitTargets;
	}

	
	public void setAgentVisitTargets ( Collection<AgentVisitTarget>   val )
	{
		agentVisitTargets  = val;
	}

	Collection<TotalVisitTarget> totalVisitTargets ;

	
	@OneToMany(cascade= CascadeType.ALL, mappedBy = "target")
	public Collection<TotalVisitTarget>  getTotalVisitTargets ()
	{
		return totalVisitTargets;
	}

	
	public void setTotalVisitTargets ( Collection<TotalVisitTarget>   val )
	{
		totalVisitTargets  = val;
	}

	Boolean  instanceCreated;


	@Column(name  ="INSTANCE_CREATED")
	public Boolean getInstanceCreated() {
		return instanceCreated;
	}

	public void setInstanceCreated(Boolean instanceCreated) {
		this.instanceCreated = instanceCreated;
	}

}