package com.primus.externals.store.controller;

import com.primus.abstracts.AbstractListController;
import com.primus.common.CommonUtil;
import com.primus.common.FVConstants;
import com.primus.common.ServiceFactory;
import com.primus.externals.store.model.Store;
import com.primus.externals.store.model.StoreAssociation;
import com.primus.externals.store.service.StoreService;
import com.techtrade.rads.framework.model.abstracts.ModelObject;
import com.techtrade.rads.framework.ui.abstracts.PageResult;
import com.techtrade.rads.framework.utils.Utils;


import javax.xml.ws.Service;
import java.util.List;
import java.util.Map;

/**
** Class Generated by Primus Auto code generator
**/
public class StoreListController extends AbstractListController{

     @Override
       protected String getServiceName() {
           return "StoreService";
       }


    @Override
    protected String getAddEditPageKey() {
        return "newstore";
    }

    @Override
    protected String getValidatorName() {
        return "StoreValidator";
    }

    @Override
    public PageResult submit(List<ModelObject> list, String submitAction ) {
        StoreService service = ServiceFactory.getStoreService();
        if ("DEASSOCIATE".equalsIgnoreCase(submitAction)) {
            if (!Utils.isNullList(list)) {
                list.forEach(modelObject -> {
                    Store store = (Store) modelObject;
                    service.associateStore(store.getId(), null, getProductContext(), "ASSOCIATE".equalsIgnoreCase(submitAction) ? true : false);
                });
            }
        } else if ("ASSOCIATE".equalsIgnoreCase(submitAction)) {
            PageResult result = new PageResult();
            result.setNextPageKey("storeAssociation");
            Store currentOne = (Store)list.get(0);
            currentOne = (Store)service.getById(currentOne.getId());
            StoreAssociation association = service.getStoreAssociation(currentOne.getId(),getProductContext());
            if(association == null) {
                association  =new StoreAssociation();
                association.setStore(currentOne);

            }
            result.setObject(association);
            return result ;

        }
        return new PageResult();
    }
}