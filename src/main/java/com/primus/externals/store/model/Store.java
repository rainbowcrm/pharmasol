package com.primus.externals.store.model;

import com.primus.abstracts.PrimusBusinessModel;
import com.primus.common.FiniteValue;
import com.primus.common.address.Address;
import com.techtrade.rads.framework.annotations.RadsPropertySet;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import javax.persistence.*;
import java.util.Collection;

@Entity
@Table(name = "STORES")
@AttributeOverrides({
        @AttributeOverride(name="ID", column=@Column(name="ID")),
        @AttributeOverride(name="createdDate", column=@Column(name="CREATED_DATE")),
        @AttributeOverride(name="createdBy", column=@Column(name="CREATED_BY")),
        @AttributeOverride(name="lastUpdateDate", column=@Column(name="LAST_UPDATED_DATE")),
        @AttributeOverride(name="lastUpdatedBy", column=@Column(name="LAST_UPDATED_BY")),
        @AttributeOverride(name="version", column=@Column(name="VERSION"))

})

/**
** Class Generated by Primus Auto code generator
**/
public class Store extends PrimusBusinessModel {

	String code ;

	
	@Column(name  ="CODE")
	public String  getCode ()
	{
		return code;
	}

	
	public void setCode ( String   val )
	{
		code  = val;
	}

	String name ;

	@RadsPropertySet(isBK =  true )
	@Column(name  ="NAME")
	public String  getName ()
	{
		return name;
	}

	@RadsPropertySet(isBK =  true )
	public void setName ( String   val )
	{
		name  = val;
	}

	String description ;

	
	@Column(name  ="DESCRIPTION")
	public String  getDescription ()
	{
		return description;
	}

	
	public void setDescription ( String   val )
	{
		description  = val;
	}

	Address address ;


	@OneToOne(cascade=CascadeType.ALL ,fetch = FetchType.LAZY )
	@JoinColumn(name  ="ADDRESS_ID")
	public Address  getAddress ()
	{
		return address;
	}


	public void setAddress ( Address   val )
	{
		address  = val;
	}


	String contactPerson;
	String contactPersonPhone;
	String email;

	@Column(name  ="CONTACT_PERSONAL")
	public String getContactPerson() {
		return contactPerson;
	}

	public void setContactPerson(String contactPerson) {
		this.contactPerson = contactPerson;
	}

	@Column(name  ="CONTACT_PERSONAL_PHONE")
	public String getContactPersonPhone() {
		return contactPersonPhone;
	}

	public void setContactPersonPhone(String contactPersonPhone) {
		this.contactPersonPhone = contactPersonPhone;
	}

	@Column(name  ="EMAIL")
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	/*Collection<StoreAssociation> storeAssociations ;


	@OneToMany(cascade= CascadeType.ALL, mappedBy = "store",fetch = FetchType.LAZY)
	public Collection<StoreAssociation> getStoreAssociations() {
		return storeAssociations;
	}

	public void setStoreAssociations(Collection<StoreAssociation> storeAssociations) {
		this.storeAssociations = storeAssociations;
	}*/


	StoreAssociation storeAssociation;

	@OneToOne(cascade= CascadeType.ALL, mappedBy = "store",fetch = FetchType.LAZY)
	public StoreAssociation getStoreAssociation() {
		return storeAssociation;
	}

	public void setStoreAssociation(StoreAssociation storeAssociation) {
		this.storeAssociation = storeAssociation;
	}

	Boolean associatedForCompany;

	@Transient
	public Boolean getAssociatedForCompany() {
		return associatedForCompany;
	}

	public void setAssociatedForCompany(Boolean associatedForCompany) {
		this.associatedForCompany = associatedForCompany;
	}


	String faceBookId;
	String gmailId;
	String photo ;

	@Column(name  ="FACEBOOK_ID")
	public String getFaceBookId() {
		return faceBookId;
	}

	public void setFaceBookId(String faceBookId) {
		this.faceBookId = faceBookId;
	}

	@Column(name  ="GMAIL_ID")
	public String getGmailId() {
		return gmailId;
	}

	public void setGmailId(String gmailId) {
		this.gmailId = gmailId;
	}


	@Column(name  ="PHOTO")
	public String getPhoto() {
		return photo;
	}

	public void setPhoto(String photo) {
		this.photo = photo;
	}
}