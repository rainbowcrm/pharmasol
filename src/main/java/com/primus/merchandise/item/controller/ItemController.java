package com.primus.merchandise.item.controller;

import com.primus.abstracts.AbstractTransactionController;
import com.primus.common.ServiceFactory;
import com.primus.merchandise.item.model.UOM;
import com.primus.merchandise.item.service.UOMService;
import com.techtrade.rads.framework.utils.Utils;;
import javax.xml.ws.Service;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;


/**
 * * Class Generated by Primus Auto code generator
 **/
public class ItemController extends AbstractTransactionController {

    @Override
    protected String getServiceName() {
        return "ItemService";
    }


    @Override
    protected String getValidatorName() {
        return "ItemValidator";
    }


    public Map<String, String> getProducts() {
        Map<String, String> ans = new LinkedHashMap<>();


        return ans;
    }

    public Map<String, String> getMeasureUOMs() {
        Map<String, String> ans = new LinkedHashMap<>();
        UOMService uomService = ServiceFactory.getUOMService();
        List<UOM> uoms= (List<UOM>)uomService.fetchAllActive(" where volumeSpecific = true ","",getProductContext());
        if(!Utils.isNullList(uoms)) {
            uoms.forEach( uom ->  {
                ans.put(String.valueOf(uom.getId()) , uom.getName());
            });
        }
        return ans;
    }

    public Map<String, String> getSaleUOMs() {
        Map<String, String> ans = new LinkedHashMap<>();
        UOMService uomService = ServiceFactory.getUOMService();
        List<UOM> uoms= (List<UOM>)uomService.fetchAllActive(" where saleSpecificUOM = true ","",getProductContext());
        if(!Utils.isNullList(uoms)) {
            uoms.forEach( uom ->  {
                ans.put(String.valueOf(uom.getId()) , uom.getName());
            });
        }
        return ans;
    }


}