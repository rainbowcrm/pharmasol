package com.primus.admin.region.model;

import com.primus.abstracts.PrimusBusinessModel;
import com.primus.common.FiniteValue;
import com.techtrade.rads.framework.annotations.RadsPropertySet;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import javax.persistence.*;
import java.util.Collection;

@Entity
@Table(name = "REGIONS")
@AttributeOverrides({
        @AttributeOverride(name = "ID", column = @Column(name = "ID")),
        @AttributeOverride(name = "createdDate", column = @Column(name = "CREATED_DATE")),
        @AttributeOverride(name = "createdBy", column = @Column(name = "CREATED_BY")),
        @AttributeOverride(name = "lastUpdateDate", column = @Column(name = "LAST_UPDATED_DATE")),
        @AttributeOverride(name = "lastUpdatedBy", column = @Column(name = "LAST_UPDATED_BY")),
        @AttributeOverride(name = "version", column = @Column(name = "VERSION"))

})

/**
 ** Class Generated by Primus Auto code generator
 **/
public class Region extends PrimusBusinessModel {

    String code;


    @Column(name = "REGION_CODE")
    public String getCode() {
        return code;
    }


    public void setCode(String val) {
        code = val;
    }

    String name;

    @RadsPropertySet(isBK = true)
    @Column(name = "REGION_NAME")
    public String getName() {
        return name;
    }

    @RadsPropertySet(isBK = true)
    public void setName(String val) {
        name = val;
    }

    String head;


    @Column(name = "REGION_HEAD")
    public String getHead() {
        return head;
    }


    public void setHead(String val) {
        head = val;
    }

    String headUser;


    @Column(name = "REGION_HEAD_USER_ID")
    public String getHeadUser() {
        return headUser;
    }


    public void setHeadUser(String val) {
        headUser = val;
    }

    String description;


    @Column(name = "DESCRIPTION")
    public String getDescription() {
        return description;
    }


    public void setDescription(String val) {
        description = val;
    }

    Collection<Location> locations;


    @OneToMany(cascade = CascadeType.ALL, mappedBy = "region")
    public Collection<Location> getLocations() {
        return locations;
    }


    public void setLocations(Collection<Location> val) {
        locations = val;
    }


}