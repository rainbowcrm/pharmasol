package com.primus.admin.division.validator;

import com.primus.abstracts.AbstractValidator;
import com.primus.abstracts.CommonErrorCodes;
import com.primus.abstracts.PrimusBusinessModel;
import com.primus.abstracts.PrimusModel;
import com.primus.common.ProductContext;
import com.techtrade.rads.framework.model.abstracts.RadsError;
import com.techtrade.rads.framework.utils.Utils;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;

import com.primus.admin.division.model.Division;


/**
 * * Class Generated by Primus Auto code generator
 **/
@Component
public class DivisionValidator extends AbstractValidator {

    @Override
    public String getBusinessKeyField() {
        return "Division_Name";
    }

    @Override
    public List<RadsError> checkforMandatoryFields(PrimusModel model, ProductContext context) {
        Division division = (Division) model;
        List<RadsError> results = new ArrayList<RadsError>();
        if (Utils.isNullString(division.getName())) {
            results.add(getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY, "Division_Name"));
        }

        if (Utils.isNullString(division.getCode())) {
            results.add(getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY, "Division_Code"));
        }

        if (Utils.isNullString(division.getEmail())) {
            results.add(getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY, "Email"));
        }

        if(Utils.isNull(division.getAddress())) {
            results.add(getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY, "Address"));
        }else if (Utils.isNullString(division.getAddress().getPhone())) {
            results.add(getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY, "Phone"));
        }else if (Utils.isNullString(division.getAddress().getStreetName())) {
            results.add(getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY, "Street_Name"));
        }else if (Utils.isNullString(division.getAddress().getZipCode())) {
            results.add(getErrorforCode(context, CommonErrorCodes.CANNOT_BE_EMPTY, "Zipcode"));
        }


        return results;

    }

    @Override
    public List<RadsError> checkforValueRanges(PrimusModel model, ProductContext context) {
        return null;
    }

    @Override
    public List<RadsError> adaptFromUI(PrimusModel model, ProductContext context) {
        super.adaptFromUI(model, context);
        return null;
    }
}